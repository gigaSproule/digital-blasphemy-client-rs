name: 'Run main workflow'

on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "*"

permissions:
  contents: write
  pull-requests: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  check-formatting:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run formatting check
        run: cargo fmt --all -- --check
  lint:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run lint
        run: cargo clippy --all-features --all-targets
  test-build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run tests
        if: github.ref_type != 'tags'
        run: cargo test
      - name: Run build
        if: github.event_name != 'pull_request' && !failure()
        run: cargo build --release
  release:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    needs:
      - test-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Set version
        if: ${{ github.ref_type == 'tag' }}
        run: |
          cargo install cargo-edit --no-default-features --features "set-version"
          cargo set-version ${{ github.ref_name }}
      - name: Commit version
        if: ${{ github.ref_type == 'tag' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Cargo.toml Cargo.lock
          git commit -m "chore: set version to ${{ github.ref_name }}"
          git push origin HEAD:main
      - name: Publish to crates.io
        uses: katyo/publish-crates@v2
        with:
          dry-run: ${{ github.ref_type != 'tag' }}
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Create Release
        if: ${{ github.ref_type == 'tag' }}
        uses: ncipollo/release-action@v1.18.0
        with:
          generateReleaseNotes: true
          makeLatest: true
